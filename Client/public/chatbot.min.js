// Global variables
let textContainer;
let chatBot;

// Fetch chatbot data from the API
async function fetchChatBot(id) {
  try {
    const response = await fetch(
      `https://chatfabrica-be-erszx2vjhq-ey.a.run.app/api/v1/iframe/chatbots/${id}` //TODO
    );
    const chatbot = await response.json();

    chatBot = chatbot;

    return chatbot;
  } catch (error) {
    console.error(error);
    return null;
  }
}

// Initialize chatbot on window load
function initializeChatbot() {
  fetchChatBot(window.embeddedChatbotConfig.chatbotId).then((chatbot) => {
    const domain = window.embeddedChatbotConfig.domain;
    createChatbotUI(domain, chatbot);
  });
}

// Apply styles to an element
function applyStyles(element, styles) {
  Object.assign(element.style, styles);
}

// Create the chatbot button and append it to the document body
function createChatbotButton() {
  const buttonContainer = document.createElement("div");
  buttonContainer.className = "button-container";

  const button = document.createElement("div");
  button.className = "bubble-menu";

  applyStyles(button, {
    position: "fixed",
    bottom: "1rem",
    right: "1rem",
    width: "50px",
    height: "50px",
    backgroundColor: chatBot?.chatBubbleButtonColor || "#4f46e5",
    borderRadius: "25px",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    color: "white",
    fontSize: "30px",
    cursor: "pointer",
    zIndex: "0",
    transform: "scale(1)",
    boxShadow: "0 2px 5px rgba(0, 0, 0, 0.3)",
  });

  button.innerHTML =
    '<svg xmlns="https://www.w3.org/2000/svg" fill="white" width="24" height="24" id="message"><path d="M5.2 22c-.4 0-.9-.1-1.3-.2s-.6-.3-.8-.5l-.1-.1c-.1-.1-.2-.3-.2-.4 0-.2.1-.3.3-.4.8-.4 1.5-1.1 1.9-1.9 0-.1 0-.2.1-.3C2.3 16.5.7 13.8.7 11 .6 6 5.7 2 12 2c6.3 0 11.4 4 11.4 9s-5.1 9.1-11.4 9.1c-.6 0-1.3 0-1.9-.1-1.5 1.3-3.2 2-4.9 2zm-1-1.1c1.7.4 3.7-.3 5.5-1.8 0-.1.2-.2.3-.1.6.1 1.3.1 2 .1 5.7 0 10.4-3.6 10.4-8.1S17.7 3 12 3 1.6 6.6 1.6 11c0 2.6 1.6 5 4.3 6.5.2.1.3.4.2.6 0 .3-.1.6-.3.9-.4.8-1 1.4-1.6 1.9z"></path></svg>';

  textContainer = document.createElement("div");
  applyStyles(textContainer, {
    position: "fixed",
    bottom: "5rem",
    maxWidth: "80%",
    textAlign: "left",
    fontSize: "14px",
    color: "black",
    padding: "20px",
    backgroundColor: "white",
    borderRadius: "8px",
    zIndex: "0",
    boxShadow: "0px 2px 5px 0px rgba(0, 0, 0, 0.15)",
    border: "1px solid #D8E0E9",
    cursor: "pointer",
    transition: "right 0.5s ease",
    right: "-400px",
  });

  let closeButton = document.createElement("div");
  closeButton.innerHTML =
    '<span style="font-size: 20px; cursor: pointer;">&times;</span>';
  closeButton.style.position = "absolute";
  closeButton.style.top = "5px";
  closeButton.style.right = "5px";
  closeButton.style.opacity = "0";
  closeButton.style.zIndex = "0";
  closeButton.style.transition = "opacity 0.5s ease";
  closeButton.onclick = function () {
    textContainer.remove();
  };
  textContainer.addEventListener("mouseover", () => {
    closeButton.style.opacity = "1";
    textContainer.appendChild(closeButton);
  });

  textContainer.addEventListener("mouseout", () => {
    closeButton.style.opacity = "0";
  });

  buttonContainer.appendChild(button);
  buttonContainer.appendChild(textContainer);

  document.body.appendChild(buttonContainer);

  return buttonContainer;
}

// Create the chatbot content iframe and append it to the document body
function createChatbotContent(domain, chatbotId) {
  let content = document.createElement("div");
  content.className = "bubble-content";
  applyStyles(content, {
    position: "fixed",
    flexDirection: "column",
    justifyContent: "space-between",
    boxShadow:
      "rgba(150, 150, 150, 0.2) 0px 10px 30px 0px, rgba(150, 150, 150, 0.2) 0px 0px 0px 1px",
    bottom: "5rem",
    right: "1rem",
    width: "90%",
    maxWidth: "448px",
    height: "100%",
    maxHeight: "628px",
    borderRadius: "0.75rem",
    display: "none",
    zIndex: 2147483646,
    overflow: "hidden",
    left: "unset",
  });

  let closeButton = document.createElement("div");
  closeButton.innerHTML =
    '<div id="closeBtn" style="cursor:pointer;"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg></div>';
  closeButton.className = "bubble-menu-close";
  closeButton.addEventListener("click", () => {
    content.style.display = "none";
  });
  applyStyles(closeButton, {
    position: "absolute",
    top: "1.4rem",
    right: "0.5rem",
    width: "30px",
    height: "30px",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    color: "black",
    fontSize: "20px",
  });

  let refreshButton = createRefreshButton(content);

  let iframe = document.createElement("iframe");
  iframe.id = "chatbot";
  applyStyles(iframe, { width: "100%", height: "100%" });
  iframe.setAttribute("frameborder", "0");
  iframe.src = `https://${domain}/chatbot-iframe/${chatbotId}`;

  content.appendChild(closeButton);
  content.appendChild(refreshButton);
  content.appendChild(iframe);

  document.body.appendChild(content);

  return content;
}

// Create the refresh button for the chatbot content
function createRefreshButton(content) {
  let refreshButton = document.createElement("div");
  refreshButton.innerHTML =
    '<svg fill="#000000" height="30px" width="30px" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 489.698 489.698" xml:space="preserve">' +
    "<g>" +
    "<g>" +
    '<path d="M468.999,227.774c-11.4,0-20.8,8.3-20.8,19.8c-1,74.9-44.2,142.6-110.3,178.9c-99.6,54.7-216,5.6-260.6-61l62.9,13.1 ' +
    "c10.4,2.1,21.8-4.2,23.9-15.6c2.1-10.4-4.2-21.8-15.6-23.9l-123.7-26c-7.2-1.7-26.1,3.5-23.9,22.9l15.6,124.8 " +
    "c1,10.4,9.4,17.7,19.8,17.7c15.5,0,21.8-11.4,20.8-22.9l-7.3-60.9c101.1,121.3,229.4,104.4,306.8,69.3 " +
    'c80.1-42.7,131.1-124.8,132.1-215.4C488.799,237.174,480.399,227.774,468.999,227.774z"/>' +
    '<path d="M20.599,261.874c11.4,0,20.8-8.3,20.8-19.8c1-74.9,44.2-142.6,110.3-178.9c99.6-54.7,216-5.6,260.6,61l-62.9-13.1 ' +
    "c-10.4-2.1-21.8,4.2-23.9,15.6c-2.1,10.4,4.2,21.8,15.6,23.9l123.8,26c7.2,1.7,26.1-3.5,23.9-22.9l-15.6-124.8 " +
    "c-1-10.4-9.4-17.7-19.8-17.7c-15.5,0-21.8,11.4-20.8,22.9l7.2,60.9c-101.1-121.2-229.4-104.4-306.8-69.2 " +
    'c-80.1,42.6-131.1,124.8-132.2,215.3C0.799,252.574,9.199,261.874,20.599,261.874z"/>' +
    "</g>" +
    "</g>" +
    "</svg>";
  refreshButton.className = "refresh-button";
  applyStyles(refreshButton, {
    position: "absolute",
    top: "1.7rem",
    right: "3rem",
    width: "17px",
    height: "17px",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    cursor: "pointer",
  });

  refreshButton.addEventListener("click", () => {
    let chatbotIframe = document.getElementById("chatbot");
    chatbotIframe.src = chatbotIframe.src;
    sessionStorage.removeItem("iframeThreadId");
    const deg = 360;
    refreshButton.style.webkitTransform = "rotate(" + deg + "deg)";
    refreshButton.style.mozTransform = "rotate(" + deg + "deg)";
    refreshButton.style.msTransform = "rotate(" + deg + "deg)";
    refreshButton.style.oTransform = "rotate(" + deg + "deg)";
    refreshButton.style.transform = "rotate(" + deg + "deg)";
    refreshButton.style.transition = "transform 1.5s ease";

    refreshButton.style.animation = "spin 1s linear";
  });
  return refreshButton;
}

// Create chatbot UI elements and append them to the document body
function createChatbotUI(domain, chatbot) {
  const button = createChatbotButton();
  const content = createChatbotContent(
    domain,
    window.embeddedChatbotConfig.chatbotId
  );

  setupChatbotInteractions({ chatbotButton: button, chatbotContent: content });
  return { chatbotButton: button, chatbotContent: content };
}

// Setup interactions for chatbot button and content
function setupChatbotInteractions({ chatbotButton, chatbotContent }) {
  chatbotButton.addEventListener("click", () => {
    chatbotContent.style.display =
      chatbotContent.style.display === "none" ? "flex" : "none";
    textContainer.style.display =
      textContainer.style.display === "none" ? "flex" : "none";
  });

  document.body.addEventListener("click", (event) => {
    if (
      !chatbotContent.contains(event.target) &&
      !chatbotButton.contains(event.target)
    ) {
      chatbotContent.style.display = "none";
    }
  });

  // Reset button
  const resetButton = document.querySelector(".refresh-button");
  resetButton.addEventListener("click", () => {
    resetButton.style.transform = "rotate(360deg)";
    setTimeout(() => {
      resetButton.style.transform = "rotate(0deg)";
    }, 1500);
  });
}

// Initialize chatbot on window load
window.onload = initializeChatbot;
